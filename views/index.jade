extends layout

block vars
    - var title = 'Header file dependency analyzer'

block stylesAndScripts
    link(rel='stylesheet', href='/css/style.css')
    link(rel='stylesheet', href='/jquery-ui-1.11.4/jquery-ui.min.css')
    script(type='text/javascript' src='/jquery-1.11.3.min.js')
    script(type='text/javascript' src='/jquery-ui-1.11.4/jquery-ui.min.js')

block content
    style.
        #param {
            position: absolute;
            top: 0px;
            height: 140px;
            left: 0px;
            width: 20%;
            background-color: #eee;
            overflow: hidden;
            border-radius: 0px 0px 10px 10px;
        }
        #filter {
            position: absolute;
            top: 140px;
            height: 65px;
            left: 0px;
            width: 20%;
            background-color: #ddd;
            overflow: hidden;
            border-radius: 10px;
        }
        #modules {
            position: absolute;
            top: 205px;
            bottom: 0px;
            left: 0px;
            width: 20%;
            overflow: auto;
        }
        #header {
            position: absolute;
            top: 0px;
            height: 15ex;
            right: 0px;
            width: 80%;
            background-color: #eee;
            overflow: hidden;
        }
        #diagram {
            position: absolute;
            top: 15ex;
            bottom: 0px;
            right: 0px;
            width: 80%;
            background-color: #fff;
            overflow: auto;
        }
        .padding-h {
            padding-left: 20px;
            padding-right: 20px;
        }
        .padding {
            padding: 20px;
        }
        .foreign td:nth-child(1) {
            color: #aaa;
        }
        .param {
            padding: 10px 0px 8px 0px;
        }
        .param span {
            padding-right: 15px;
        }


        .fixed-table-container-inner {
          overflow-x: hidden;
          overflow-y: auto;
          height: 100%;
        }

        .header-background {
          background-color: #eee;
          height: 77px; /* height of header */
          position: absolute;
          top: 0;
          right: 17px;
          left: 0;
          box-shadow: 0px 5px 12px 0px #ccc;
          border-radius: 0px 0px 10px 0px;
        }

        #modules table {
          background-color: white;
          width: 100%;
          overflow-x: hidden;
          overflow-y: auto;
          border-collapse: collapse;
        }

        .th-inner {
          position: absolute;
          top: 0;
        }
        th:nth-child(1) .th-inner {
          text-align: right;
        }
        .th-content {
            height: 75px;
        }
        .th-inner div {
            height: 25px;
        }
        .tr-odd {
            background-color: #eee;
        }

        .bad-text-input {
            background-color: #fcc;
        }

        .modulename {
            padding-left: 12px;
            background-image: url('/images/bullet_gray.png');
            background-repeat: no-repeat;
            background-position: left 2px center;
        }

        .current .modulename {
            background-image: url('/images/bullet_green.png');
        }

        #progress-overlay {
            background-color: #012;
            position: fixed;
            top: 0; right: 0; bottom: 0; left: 0;
            opacity: 0.5;
            z-index: 10;
        }
        .ui-progressbar {
            position: absolute;
            top: 30%;
            right: 15%;
            left: 15%;
        }
        .progress-label {
            position: absolute;
            left: 0;
            right: 0;
            top: 4px;
            font-weight: bold;
            text-shadow: 1px 1px 0 #fff;
            text-align: center;
        }
        #rescan, #buildInfo {
            float: right;
        }
        #rescan {
            color: #c00;
        }

        /* see http://stackoverflow.com/questions/6258521/clear-icon-inside-input-text */
        .clearable{
            background-image: url('/images/close_search.png');
            background-repeat: no-repeat;
            background-position: right -10px center;
            border: 1px solid #999;
            padding: 3px 18px 3px 4px;     /* Use the same right padding (18) in jQ! */
            border-radius: 3px;
            transition: background 0.4s;
        }
        .clearable.x  { background-position: right 5px center; } /* (jQ) Show icon */
        .clearable.onX{ cursor: pointer; }              /* (jQ) hover cursor style */
        .clearable::-ms-clear {display: none; width:0; height:0;} /* Remove IE default X */
    script.
        $(document).ready(function() {
            var edge_length = 1
            function moduleName() {
                return $(this).parent().parent().children().first().text()
            }
            function diagramParam() {
                function checkedModules(className) {
                    return $('.'+className+':checked').map(moduleName).get()
                }
                return {
                    indep: checkedModules('indep'),
                    outdep: checkedModules('outdep'),
                    ignore: checkedModules('ignore'),
                    internal: checkedModules('internal'),
                    visualizer: $('#visualizer').val(),
                    edge_length: edge_length,
                    indirect: $('#indirect').prop('checked'),
                    detailed: $('#detailed').prop('checked'),
                }
            }
            function loadDiagram() {
                var p = diagramParam()
                var h = $('#header')
                h.html(
                    'indep: ' + p.indep.join(' ') +
                    '<br/>outdep: ' + p.outdep.join(' ') +
                    '<br/>ignore: ' + p.ignore.join(' ') +
                    '<br/>internal: ' + p.internal.join(' ')
                    )
                $.get('/diagram', p)
                    .done(function(data) {
                        var m = {}
                        for (var i=0, n=data.modules.length; i<n; ++i)
                            m[data.modules[i]] = 1
                        $('.modulename').each(function() {
                            var j = $(this), tr = j.parent()
                            tr[m[j.text()]? 'addClass': 'removeClass'].call(tr, 'current')
                        })
                        $('#diagramImage').attr('src', data.url)
                    })
                    .fail(function(xhr, text) {
                        h.append('<br/>Failed to get diagram url: ' + (xhr.statusText || text) + ' (' + xhr.status + ')')
                        $('#modules tbody').removeClass('current')
                    })
                    .always(filterModules)
            }
            function moduleCheckboxChanged() {
                var o = $(this)
                if (!o.hasClass('ignore'))
                    o.parent().parent().find('.ignore').prop('checked', false)
                loadDiagram()
            }
            $('#indirect, #detailed').click(loadDiagram)

            function checkAll(className, checked) {
                $('.'+className+':visible').each(function() {
                    var o = $(this)
                    var row = o.parent().parent()
                    var cancel = checked && !o.prop('checked')
                    if (className === 'ignore')
                        cancel = cancel && row.find(':not(.ignore):checked').length > 0
                    else
                        cancel = cancel && row.find('.ignore:checked').length > 0
                    if (!cancel)
                        o.prop('checked', checked)
                })
                loadDiagram()
            }
            $('.outdep_all').click(checkAll.bind(null, 'outdep', true))
            $('.outdep_none').click(checkAll.bind(null, 'outdep', false))
            $('.indep_all').click(checkAll.bind(null, 'indep', true))
            $('.indep_none').click(checkAll.bind(null, 'indep', false))
            $('.ignore_all').click(checkAll.bind(null, 'ignore', true))
            $('.ignore_none').click(checkAll.bind(null, 'ignore', false))
            $('.internal_all').click(checkAll.bind(null, 'internal', true))
            $('.internal_none').click(checkAll.bind(null, 'internal', false))

            $('#visualizer').change(loadDiagram)
            $('#edge_length').slider({
                value:1,
                min: 1,
                max: 5,
                step: 0.5,
                slide: function(event, ui) {
                    edge_length = ui.value
                    loadDiagram()
                }
            })

            function styleModuleRows() {
                $('#modules tbody tr:visible:odd').addClass('tr-odd')
                $('#modules tbody tr:visible:even').removeClass('tr-odd')
            }
            styleModuleRows()

            function filterModules() {
                try {
                    var filterText = new RegExp($('#filter-name').val())
                    }
                catch(err) {
                    $('#filter-name').addClass('bad-text-input')
                    return
                }
                $('#filter-name').removeClass('bad-text-input')
                var filterSel = $("input:radio[name='filter']:checked").val()
                var all = $('#modules tbody').children(),   show = [],   hide = []
                all.each(function() {
                    var o = $(this)
                    var coll = (!filterSel || o.is(filterSel)) && o.children().first().text().match(filterText)? show: hide
                    coll.push(this)
                })
                $(show).show('fast')
                $(hide).hide('fast')
                all.promise().done(styleModuleRows)
            }

            $('.filter-option').click(filterModules)
            $('#filter-name').on('input', filterModules)

            ;(function() {
                var progressOverlay = $('#progress-overlay')
                var progressbar = $('#progressbar')
                var progressLabel = $('.progress-label')

                function applySavedParam(savedParam) {
                    function dict(arr) {
                        var result = {}
                        for (var i=0, n=arr.length; i<n; ++i)
                            result[arr[i]] = 1
                        return result
                    }
                    var d = {
                        indep: dict(savedParam.indep),
                        outdep: dict(savedParam.outdep),
                        ignore: dict(savedParam.ignore),
                        internal: dict(savedParam.internal)
                    }
                    function applyToModule($tr, moduleName, className) {
                        if (d[className][moduleName])
                            $tr.find('.'+className).prop('checked', true)
                    }
                    $('#modules tbody').children().each(function() {
                        var $tr = $(this)
                        var moduleName = $tr.children().first().text()
                        for (className in d)
                            applyToModule($tr, moduleName, className)
                    })
                    loadDiagram()
                }

                function scanningError(xhr, text) {
                    var msg = (xhr.statusText || text)
                    if (xhr.status)
                    msg += ' (' + xhr.status + ')'
                        progressLabel.text(msg)
                }

                progressbar.progressbar({
                    value: 0,
                    change: function() {
                        progressLabel.text( progressbar.progressbar('value') + "%" )
                    },
                    complete: function() {
                        $.get('/modules')
                            .done(function(html) {
                                var savedParam = diagramParam()
                                $('#modules tbody').html(html)
                                $('.internal, .outdep, .indep, .ignore').click(moduleCheckboxChanged)
                                applySavedParam(savedParam)
                                progressOverlay.hide()
                            })
                            .fail(scanningError)
                    }
                })

                function updateProgress() {
                    $.get('/status')
                        .done(function(data) {
                            if (data.status === 'ready')
                                progressbar.progressbar('value', 100)
                            else if (data.status === 'failed') {
                                scanningError({statusText: 'Failed to parse project files'})
                            }
                            else {
                                var value = Math.floor(data.progress * 100)
                                if (value >= 100)
                                    value = 99
                                progressbar.progressbar('value', value)
                                setTimeout(updateProgress, 600)
                            }
                        })
                        .fail(scanningError)
                }
                updateProgress()

                $('#rescan').click(function() {
                    progressbar.progressbar('value', 0)
                    progressOverlay.show()
                    $.get('/rescan')
                        .done(updateProgress)
                        .fail(scanningError)
                })
            })()

            $('#buildInfo').click(function() {
                $('#header').html($('#basicBuildInfo').html())
            })

            // CLEARABLE INPUT
            // see http://stackoverflow.com/questions/6258521/clear-icon-inside-input-text
            ;(function() {
                function tog(v){return v?'addClass':'removeClass'}
                $(document).on('input', '.clearable', function(){
                    $(this)[tog(this.value)]('x')
                }).on('mousemove', '.x', function( e ){
                    $(this)[tog(this.offsetWidth-18 < e.clientX-this.getBoundingClientRect().left)]('onX')
                }).on('touchstart click', '.onX', function( ev ){
                    ev.preventDefault()
                    $(this).removeClass('x onX').val('').change()
                    filterModules()
                })
            })()
        })
    #param
        .padding
            div
                span Visualizer
                select#visualizer(selected='dot')
                    option(value='dot') dot
                    option(value='neato') neato
                    option(value='fdp') fdp
                    option(value='sfdp') sfdp
                    option(value='twopi') twopi
                    option(value='circo') circo
                input#buildInfo(type='button' value='?')
                input#rescan(type='button' value='rescan')
            div
                .param Edge length / rank separation
                #edge_length
            .param
                input#indirect(type='checkbox')
                span Indirect
                input#detailed(type='checkbox')
                span Detailed
    #filter
        .padding-h
            .param
                input.filter-option(type='radio' name='filter' value='' checked)
                span All
                input.filter-option(type='radio' name='filter' value=':not(.foreign)')
                span Built
                input.filter-option(type='radio' name='filter' value='.foreign')
                span Not built
                input.filter-option(type='radio' name='filter' value='.current')
                span Current
                br
                span Name
                input.clearable#filter-name(type='text' placeholder='regex pattern')
    #modules
        //-
            Note: Fixed table header implementation is based on this:
            http://salzerdesign.com/test/fixedTable.html
        .header-background
        .fixed-table-container-inner
            table
                thead
                    tr
                        th
                            .th-content
                            .th-inner
                                div module
                                div all
                                div none
                        th
                            .th-inner
                                div o
                                div
                                    input.internal_all(type='button')
                                div
                                    input.internal_none(type='button')
                        th
                            .th-inner
                                div ->
                                div
                                    input.outdep_all(type='button')
                                div
                                    input.outdep_none(type='button')
                        th
                            .th-inner
                                div <-
                                div
                                    input.indep_all(type='button')
                                div
                                    input.indep_none(type='button')
                        th
                            .th-inner
                                div x
                                div
                                    input.ignore_all(type='button')
                                div
                                    input.ignore_none(type='button')
                tbody
    #header
    #basicBuildInfo(style='display:none;')
        h1 Select modules to show diagram for
        h2 Build directory: #{req.buildInfo.options.buildPath}
    #diagram
        .padding
            img#diagramImage(src='images/question.png')
    #progress-overlay
        #progressbar
            .progress-label Scanning dependencies...
